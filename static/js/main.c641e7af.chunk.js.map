{"version":3,"sources":["../../src/utils.ts","../../src/constants.ts","App.js","../../src/index.tsx","index.js"],"names":["getMatchMedia","window","matchMedia","getColorMode","matchQueryList","matches","App","colorMode","setColorMode","handleChange","handler","addEventListener","bindEvent","unbindEvent","removeEventListener","addListener","removeListener","useColorMode","styles","backgroundPositionY","color","className","style","href","ReactDOM","render","document","getElementById"],"mappings":"kOAEaA,EAAgB,WAC3B,OAAOC,OAAOC,YAAcD,OAAOC,WCHV,iCDMdC,EAAe,SAACC,GAC3B,OAAOA,GAAkBA,EAAeC,QCLjB,OACC,SC0BXC,MAzBH,KAAO,MAAD,ECCU,WACpB,iCAACC,EAAA,KAAWC,EAAA,KAIZC,EAAe,WAAM,OAAAD,EAAaL,EAAaH,OAWrD,OAVA,qBAAU,WACF,IHDRI,EACAM,EGAQ,GHDRN,EGCQ,IHARM,EGAQ,EHEJN,EAAeO,iBACV,CACLC,UAAW,WAAM,OAAAR,EAAeO,iBAAiB,SAAUD,IAC3DG,YAAa,WAAM,OAAAT,EAAeU,oBAAoB,SAAUJ,KAI7D,CACLE,UAAW,WAAM,OAAAR,EAAeW,YAAYL,IAC5CG,YAAa,WAAM,OAAAT,EAAeY,eAAeN,MGX9BG,EAAA,EAAAA,YAMnB,OAFAD,EAJQ,EAAAA,aAMDC,IACN,IAEI,CAACN,GDhBYU,GAAbV,EADS,oBAGVW,EACU,SAAdX,EACI,CACEY,oBAAqB,MACrBC,MAAO,sBAET,CACED,oBAAqB,IACrBC,MAAO,SAGf,OACE,yBAAKC,UAAU,YAAYC,MAAOJ,GAChC,kDAAwBX,GAExB,iDAC+B,SAAdA,EAAuB,QAAU,OADlD,kBACyE,IACvE,uBAAGgB,KAAK,uDAAR,SElBRC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.c641e7af.chunk.js","sourcesContent":["import { MEDIA_QUERY, MODE_DARK, MODE_LIGHT } from \"./constants\";\n\nexport const getMatchMedia = () => {\n  return window.matchMedia && window.matchMedia(MEDIA_QUERY);\n};\n\nexport const getColorMode = (matchQueryList: MediaQueryList | undefined) => {\n  return matchQueryList && matchQueryList.matches ? MODE_DARK : MODE_LIGHT;\n};\n\nexport const getBindingEvents = (\n  matchQueryList: MediaQueryList,\n  handler: () => void\n) => {\n  if (matchQueryList.addEventListener) {\n    return {\n      bindEvent: () => matchQueryList.addEventListener(\"change\", handler),\n      unbindEvent: () => matchQueryList.removeEventListener(\"change\", handler)\n    };\n  }\n\n  return {\n    bindEvent: () => matchQueryList.addListener(handler),\n    unbindEvent: () => matchQueryList.removeListener(handler)\n  };\n};\n","export const MEDIA_QUERY = \"(prefers-color-scheme: dark)\";\n\nexport const MODE_DARK = \"dark\";\nexport const MODE_LIGHT = \"light\";\n","import React from \"react\";\n\nimport { useColorMode } from \"react-use-color-mode\";\n\nconst App = () => {\n  const [colorMode] = useColorMode();\n\n  const styles =\n    colorMode === \"dark\"\n      ? {\n          backgroundPositionY: \"75%\",\n          color: \"rgb(231, 232, 235)\"\n        }\n      : {\n          backgroundPositionY: \"0\",\n          color: \"black\"\n        };\n\n  return (\n    <div className=\"container\" style={styles}>\n      <h2>Your color Mode is {colorMode}</h2>\n\n      <strong>\n        Try to switch {colorMode === \"dark\" ? \"light\" : \"dark\"} mode, and find{\" \"}\n        <a href=\"https://github.com/JasonHeylon/react-use-color-mode\">me</a>\n      </strong>\n    </div>\n  );\n};\nexport default App;\n","import { useState, useEffect } from \"react\";\n\nimport { getColorMode, getMatchMedia, getBindingEvents } from \"./utils\";\nimport { colors } from \"./teyps\";\n\nexport const useColorMode = () => {\n  const [colorMode, setColorMode] = useState<colors>(\n    getColorMode(getMatchMedia())\n  );\n\n  const handleChange = () => setColorMode(getColorMode(getMatchMedia()));\n  useEffect(() => {\n    const { bindEvent, unbindEvent } = getBindingEvents(\n      getMatchMedia(),\n      handleChange\n    );\n    bindEvent();\n\n    return unbindEvent;\n  }, []);\n\n  return [colorMode];\n};\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}
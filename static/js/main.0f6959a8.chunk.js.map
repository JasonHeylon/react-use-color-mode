{"version":3,"sources":["../../src/utils.ts","../../src/constants.ts","App.js","../../src/index.tsx","index.js"],"names":["getMatchMedia","window","matchMedia","getColorMode","matchQueryList","matches","App","colorMode","setColorMode","handleChange","requestAnimationFrame","handler","addEventListener","bindEvent","unbindEvent","removeEventListener","addListener","removeListener","useColorMode","colorModeEmoji","className","href","ReactDOM","render","document","getElementById"],"mappings":"8LAGaA,G,KAAgB,WAC3B,OAAOC,OAAOC,YAAcD,OAAOC,WCJV,kCDOdC,EAAe,SAC1BC,GAEA,OAAOA,GAAkBA,EAAeC,QCRjB,OACC,SC6BXC,MA5BH,KACV,MAAMC,ECAoB,WACpB,iCAACA,EAAA,KAAWC,EAAA,KAIZC,EAAe,WACnBR,OAAOS,uBAAsB,WAC3BF,EAAaL,EAAaH,UAa9B,OAVA,qBAAU,WACF,IHFRI,EACAO,EGCQ,GHFRP,EGEQ,IHDRO,EGCQ,EHCJP,EAAeQ,iBACV,CACLC,UAAW,WAAY,OAAAT,EAAeQ,iBAAiB,SAAUD,IACjEG,YAAa,WACX,OAAAV,EAAeW,oBAAoB,SAAUJ,KAI5C,CACLE,UAAW,WAAY,OAAAT,EAAeY,YAAYL,IAClDG,YAAa,WAAY,OAAAV,EAAea,eAAeN,MGXpCG,EAAA,EAAAA,YAMnB,OAFAD,EAJQ,EAAAA,aAMDC,IACN,IAEIP,EDpBWW,GAEZC,EAA+B,SAAdZ,EAAuB,eAAO,eAErD,OACE,yBAAKa,UAAS,oBAAeb,IAC3B,4BACE,uBAAGc,KAAK,uDAAR,wBAGA,8BAAOF,IAGT,qDAA2BZ,GAE3B,oDACkC,SAAdA,EAAuB,QAAU,OADrD,wBAKA,qCAEE,uBAAGc,KAAK,kCAAR,mBErBRC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.0f6959a8.chunk.js","sourcesContent":["import { MEDIA_QUERY, MODE_DARK, MODE_LIGHT } from './constants';\nimport { colors } from './teyps';\n\nexport const getMatchMedia = (): MediaQueryList => {\n  return window.matchMedia && window.matchMedia(MEDIA_QUERY);\n};\n\nexport const getColorMode = (\n  matchQueryList: MediaQueryList | undefined\n): colors => {\n  return matchQueryList && matchQueryList.matches ? MODE_DARK : MODE_LIGHT;\n};\n\nexport const getBindingEvents = (\n  matchQueryList: MediaQueryList,\n  handler: () => void\n): { bindEvent: () => void; unbindEvent: () => void } => {\n  if (matchQueryList.addEventListener) {\n    return {\n      bindEvent: (): void => matchQueryList.addEventListener('change', handler),\n      unbindEvent: (): void =>\n        matchQueryList.removeEventListener('change', handler),\n    };\n  }\n\n  return {\n    bindEvent: (): void => matchQueryList.addListener(handler),\n    unbindEvent: (): void => matchQueryList.removeListener(handler),\n  };\n};\n","export const MEDIA_QUERY = '(prefers-color-scheme: dark)';\n\nexport const MODE_DARK = 'dark';\nexport const MODE_LIGHT = 'light';\n","import React from 'react';\n\nimport { useColorMode } from 'react-use-color-mode';\n\nconst App = () => {\n  const colorMode = useColorMode();\n\n  const colorModeEmoji = colorMode === 'dark' ? 'ðŸŒ‘' : 'ðŸŒ•';\n\n  return (\n    <div className={`container ${colorMode}`}>\n      <h1>\n        <a href='https://github.com/JasonHeylon/react-use-color-mode'>\n          react-use-color-mode\n        </a>\n        <span>{colorModeEmoji}</span>\n      </h1>\n\n      <h2>Your system's mode is {colorMode}</h2>\n\n      <strong>\n        Try to switch to {colorMode === 'dark' ? 'light' : 'dark'} mode of your\n        system\n      </strong>\n\n      <footer>\n        by\n        <a href='https://github.com/JasonHeylon'> JasonHeylon</a>\n      </footer>\n    </div>\n  );\n};\nexport default App;\n","import { useState, useEffect } from 'react';\n\nimport { getColorMode, getMatchMedia, getBindingEvents } from './utils';\nimport { colors } from './teyps';\n\nexport const useColorMode = (): colors => {\n  const [colorMode, setColorMode] = useState<colors>(\n    getColorMode(getMatchMedia())\n  );\n\n  const handleChange = (): void => {\n    window.requestAnimationFrame(() => {\n      setColorMode(getColorMode(getMatchMedia()));\n    });\n  };\n  useEffect(() => {\n    const { bindEvent, unbindEvent } = getBindingEvents(\n      getMatchMedia(),\n      handleChange\n    );\n    bindEvent();\n\n    return unbindEvent;\n  }, []);\n\n  return colorMode;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}